<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1540.v295eccc9778f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2258.v4e96d2b_da_f9b_"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2258.v4e96d2b_da_f9b_">
      <jobProperties/>
      <triggers>
        <string>com.cloudbees.jenkins.GitHubPushTrigger</string>
      </triggers>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.44.0">
      <projectUrl>https://github.com/kautsarakasyah/fp-development-automation.git/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.44.0">
          <spec></spec>
        </com.cloudbees.jenkins.GitHubPushTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@4169.vb_7e492a_1c7b_e">
    <script>pipeline {
  agent any

  triggers {
    githubPush()
  }

  environment {
    DOCKERHUB_CREDENTIALS = credentials(&apos;dockerhub-creds&apos;)
    TELEGRAM_BOT_TOKEN = &apos;7964045222:AAElE5m35X1rUfU-2lO0ZpLzwuy_esmMsvY&apos;
    TELEGRAM_CHAT_ID = &apos;1868802578&apos;
    JENKINS_URL = &apos;https://c8f3fe8b4c2d.ngrok-free.app&apos;

    // Build-time secrets (jangan didefinisikan hardcoded di file Dockerfile)
    JWT_SECRET = &apos;your-super-secret-jwt-key&apos;
    NEXT_PUBLIC_APP_URL = &apos;http://fp-frontend-final-app-deployment.apps.ocp-one-gate-payment.skynux.fun&apos;
  }

  stages {

    stage(&apos;Checkout&apos;) {
      steps {
        git branch: &apos;main&apos;, url: &apos;https://github.com/kautsarakasyah/fp-development-automation.git&apos;
      }
    }

    stage(&apos;Debug Workspace&apos;) {
      steps {
        echo &apos;üîç Menampilkan struktur folder workspace:&apos;
        sh &apos;ls -al&apos;
        echo &apos;üîç Menampilkan isi folder fp-frondend-fix:&apos;
        sh &apos;ls -al fp-frondend-fix || echo &quot;‚ùå Folder fp-frondend-fix tidak ditemukan!&quot;&apos;
      }
    }

    stage(&apos;Build &amp; Push Frontend Docker Image&apos;) {
      steps {
        dir(&apos;fp-frondend-fix&apos;) {
          echo &apos;üì¶ Membuat Docker image dengan JWT dan APP_URL&apos;

          sh &quot;&quot;&quot;
            docker build \
              --build-arg JWT_SECRET=$JWT_SECRET \
              --build-arg NEXT_PUBLIC_APP_URL=$NEXT_PUBLIC_APP_URL \
              -t kautsarakasyah/fp-frontend:latest .
          &quot;&quot;&quot;

          withCredentials([usernamePassword(credentialsId: &apos;dockerhub-creds&apos;, usernameVariable: &apos;USER&apos;, passwordVariable: &apos;PASS&apos;)]) {
            sh &apos;echo $PASS | docker login -u $USER --password-stdin&apos;
            sh &apos;docker push kautsarakasyah/fp-frontend:latest&apos;
          }
        }
      }
    }

    stage(&apos;Deploy to OpenShift&apos;) {
      steps {
        echo &apos;üöÄ Melakukan deploy ke OpenShift...&apos;
        sh &apos;oc rollout restart deployment fp-frontend -n final-app-deployment&apos;
      }
    }
  }

  post {
    success {
      sh &quot;&quot;&quot;
        curl -s -X POST https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage \
        -d chat_id=$TELEGRAM_CHAT_ID \
        -d text=&apos;‚úÖ *Deploy frontend sukses!*&apos; \
        -d parse_mode=Markdown
      &quot;&quot;&quot;
    }
    failure {
      sh &quot;&quot;&quot;
        curl -s -X POST https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage \
        -d chat_id=$TELEGRAM_CHAT_ID \
        -d text=&apos;‚ùå *Deploy frontend gagal!*&apos; \
        -d parse_mode=Markdown
      &quot;&quot;&quot;
    }
  }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>