<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1540.v295eccc9778f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2258.v4e96d2b_da_f9b_"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2258.v4e96d2b_da_f9b_">
      <jobProperties/>
      <triggers>
        <string>com.cloudbees.jenkins.GitHubPushTrigger</string>
      </triggers>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.44.0">
      <projectUrl>https://github.com/kautsarakasyah/fp-development-automation.git/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.44.0">
          <spec></spec>
        </com.cloudbees.jenkins.GitHubPushTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@4169.vb_7e492a_1c7b_e">
    <script>pipeline {
  agent any

  triggers {
    githubPush()
  }

  environment {
    DOCKERHUB_CREDENTIALS = credentials(&apos;dockerhub-creds&apos;) // Set di Jenkins Credentials
    TELEGRAM_BOT_TOKEN = &apos;7964045222:AAElE5m35X1rUfU-2lO0ZpLzwuy_esmMsvY&apos;
    TELEGRAM_CHAT_ID = &apos;1868802578&apos;
    IMAGE_NAME = &apos;kautsarakasyah/fp-frontend:latest&apos;
    OPENSHIFT_DEPLOYMENT_NAME = &apos;fp-frontend&apos;
    OPENSHIFT_NAMESPACE = &apos;final-app-deployment&apos;
  }

  stages {
    stage(&apos;Checkout&apos;) {
      steps {
        // Mengambil kode dari repository
        deleteDir() // bersihkan workspace
        git branch: &apos;main&apos;, url: &apos;https://github.com/kautsarakasyah/fp-development-automation.git&apos;
      }
    }

    stage(&apos;Build Docker Image&apos;) {
      steps {
        dir(&apos;fp-frondend-fix&apos;) {
          echo &quot;üì¶ Building Docker image: ${IMAGE_NAME}&quot;
          sh &quot;docker build -t ${IMAGE_NAME} .&quot;
        }
      }
    }

    stage(&apos;Push to DockerHub&apos;) {
      steps {
        withCredentials([usernamePassword(credentialsId: &apos;dockerhub-creds&apos;, usernameVariable: &apos;USER&apos;, passwordVariable: &apos;PASS&apos;)]) {
          echo &quot;üöÄ Pushing image to DockerHub&quot;
          sh &apos;&apos;&apos;
            echo &quot;$PASS&quot; | docker login -u &quot;$USER&quot; --password-stdin
            docker push &quot;$IMAGE_NAME&quot;
          &apos;&apos;&apos;
        }
      }
    }

    stage(&apos;Deploy to OpenShift&apos;) {
      steps {
        echo &quot;üîÅ Restarting OpenShift deployment: ${OPENSHIFT_DEPLOYMENT_NAME}&quot;
        sh &quot;oc rollout restart deployment ${OPENSHIFT_DEPLOYMENT_NAME} -n ${OPENSHIFT_NAMESPACE}&quot;
      }
    }
  }

  post {
    success {
      echo &apos;‚úÖ Deployment succeeded!&apos;
      sh &apos;&apos;&apos;
        curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage \
          -d chat_id=${TELEGRAM_CHAT_ID} \
          -d text=&quot;‚úÖ [Jenkins] Deploy *fp-frontend* berhasil!&quot; \
          -d parse_mode=Markdown
      &apos;&apos;&apos;
    }

    failure {
      echo &apos;‚ùå Deployment failed!&apos;
      sh &apos;&apos;&apos;
        curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage \
          -d chat_id=${TELEGRAM_CHAT_ID} \
          -d text=&quot;‚ùå [Jenkins] Deploy *fp-frontend* gagal!&quot; \
          -d parse_mode=Markdown
      &apos;&apos;&apos;
    }
  }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>